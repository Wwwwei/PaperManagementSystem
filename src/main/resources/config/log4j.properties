# log4j.rootLogger=INFO,Console,File  
##定义日志输出目的地为控制台  
#log4j.appender.Console=org.apache.log4j.ConsoleAppender  
#log4j.appender.Console.Target=System.out  

#可以灵活地指定日志输出格式，下面一行是指定具体的格式  
#log4j.appender.Console.layout = org.apache.log4j.PatternLayout  
#log4j.appender.Console.layout.ConversionPattern=[%c] - %m%n  
log4j.rootLogger=debug,stdout,File

	 

	 

	### \u628A\u65E5\u5FD7\u4FE1\u606F\u8F93\u51FA\u5230\u63A7\u5236\u53F0 ###
log4j.appender.stdout=org.apache.log4j.ConsoleAppender
log4j.appender.stdout.Target=System.err
log4j.appender.stdout.layout=org.apache.log4j.SimpleLayout
  
#log4j.logger.com.ibatis=DEBUG
#log4j.logger.com.ibatis.common.jdbc.SimpleDataSource=DEBUG
#log4j.logger.com.ibatis.common.jdbc.ScriptRunner=DEBUG
#log4j.logger.com.ibatis.sqlmap.engine.impl.SqlMapClientDelegate=DEBUG
#log4j.logger.java.sql.Connection=DEBUG
#log4j.logger.java.sql.Statement=DEBUG
#log4j.logger.java.sql.PreparedStatement=DEBUG
#文件大小到达指定尺寸的时候产生一个新的文件  
log4j.appender.File = org.apache.log4j.RollingFileAppender  
#指定输出目录  
log4j.appender.File.File = /paper/logs/ssm.log
#定义文件最大大小  
log4j.appender.File.MaxFileSize = 20MB  
# 输出所以日志，如果换成DEBUG表示输出DEBUG以上级别日志  
log4j.appender.File.Threshold =DEBUG
log4j.appender.File.layout = org.apache.log4j.PatternLayout  
log4j.appender.File.layout.ConversionPattern =[%p] [%d{yyyy-MM-dd HH\:mm\:ss}][%c]%m%n  
## set log levels ###  
#log4j.rootLogger = debug,stdout,D,E  
#
#log4j.appender.stdout = org.apache.log4j.ConsoleAppender  
#log4j.appender.stdout.Target = System.out  
#log4j.appender.stdout.layout = org.apache.log4j.PatternLayout  
#log4j.appender.stdout.layout.ConversionPattern = [%-5p] %d{yyyy-MM-dd HH:mm:ss,SSS} method:%l%n%m%n  
#
#log4j.appender.D = org.apache.log4j.DailyRollingFileAppender  
#log4j.appender.D.File = D://logs/log.log  
#log4j.appender.D.Append = true  
#log4j.appender.D.Threshold = DEBUG   
#log4j.appender.D.layout = org.apache.log4j.PatternLayout  
#log4j.appender.D.layout.ConversionPattern = %-d{yyyy-MM-dd HH:mm:ss}  [ %t:%r ] - [ %p ]  %m%n  
